[versions]
detektPlugin = "1.23.1"
composePlugin = "1.5.0"
kotlinPlugin = "1.9.0"
versionCatalogUpdatePlugin = "0.8.1"
versionsPlugin = "0.47.0"

jackson = "2.15.2"
kotlinxCoroutines = "1.7.3"
log4jApi = "2.20.0"
log4jApiKotlin = "1.2.0"
logbackImpl = "1.4.11"
moleculeRuntime = "1.2.0"
ort = "023c7b06de"
richtext = "0.17.0"

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detektPlugin" }
compose = { id = "org.jetbrains.compose", version.ref = "composePlugin" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinPlugin" }
versionCatalogUpdate = { id = "nl.littlerobots.version-catalog-update", version.ref = "versionCatalogUpdatePlugin" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }

[libraries]
detektFormatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detektPlugin" }
composeMaterialIconsExtendedDesktop = { module = "org.jetbrains.compose.material:material-icons-extended-desktop", version.ref = "composePlugin" }
jacksonModuleKotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
kotlinxCoroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutines" }
log4jApiKotlin = { module = "org.apache.logging.log4j:log4j-api-kotlin", version.ref = "log4jApiKotlin" }
log4jApiToSlf4j = { module = "org.apache.logging.log4j:log4j-to-slf4j", version.ref = "log4jApi" }
logbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackImpl" }
moleculeRuntime = { module = "app.cash.molecule:molecule-runtime", version.ref = "moleculeRuntime" }
ortDetektRules = { module = "com.github.oss-review-toolkit.ort:detekt-rules", version.ref = "ort" }
ortModel = { module = "com.github.oss-review-toolkit.ort:model", version.ref = "ort" }
ortPackageConfigurationProviders = { module = "com.github.oss-review-toolkit.ort:package-configuration-providers", version.ref = "ort" }
ortReporter = { module = "com.github.oss-review-toolkit.ort:reporter", version.ref = "ort" }
richtextCommonmark = { module = "com.halilibo.compose-richtext:richtext-commonmark", version.ref = "richtext" }
richtextUiMaterial = { module = "com.halilibo.compose-richtext:richtext-ui-material", version.ref = "richtext" }

[bundles]
ort = ["ortModel", "ortReporter"]
richtext = ["richtextCommonmark", "richtextUiMaterial"]

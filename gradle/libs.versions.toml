[versions]
detektPlugin = "1.23.8"
composePlugin = "1.8.2"
kotlinPlugin = "2.2.10"
versionsPlugin = "0.52.0"

dataTableMaterial = "0.8.1"
fileKit = "0.10.0"
jackson = "2.19.2"
kotlinxCoroutines = "1.10.2"
log4jApi = "2.25.1"
log4jApiKotlin = "1.5.0"
logbackImpl = "1.5.18"
moleculeRuntime = "2.1.0"
richtext = "0.20.0"

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detektPlugin" }
compose = { id = "org.jetbrains.compose", version.ref = "composePlugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlinPlugin" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinPlugin" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }

[libraries]
dataTableMaterial = { module = "com.seanproctor:data-table-material", version.ref = "dataTableMaterial" }
detektFormatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detektPlugin" }
fileKitCore = { module = "io.github.vinceglb:filekit-core", version.ref = "fileKit" }
fileKitDialogs = { module = "io.github.vinceglb:filekit-dialogs", version.ref = "fileKit" }
jacksonModuleKotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
kotlinxCoroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutines" }
log4jApiKotlin = { module = "org.apache.logging.log4j:log4j-api-kotlin", version.ref = "log4jApiKotlin" }
log4jApiToSlf4j = { module = "org.apache.logging.log4j:log4j-to-slf4j", version.ref = "log4jApi" }
logbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackImpl" }
moleculeRuntime = { module = "app.cash.molecule:molecule-runtime", version.ref = "moleculeRuntime" }
richtextCommonmark = { module = "com.halilibo.compose-richtext:richtext-commonmark", version.ref = "richtext" }
richtextUiMaterial = { module = "com.halilibo.compose-richtext:richtext-ui-material", version.ref = "richtext" }

[bundles]
fileKit = ["fileKitCore", "fileKitDialogs"]
richtext = ["richtextCommonmark", "richtextUiMaterial"]
